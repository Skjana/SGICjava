/*4-A*/
public class Main {
public static void main(String[] args)throws Exception {  
    String Date="12-08-2021";  
    Date date=new SimpleDateFormat("dd-MM-yyyy").parse(Date);  
    System.out.println(Date+"\n"+date);  
}  
} 

OUTPUT:
12-08-2021
Thu Aug 12 00:00:00 IST 2021

/*4-B*/
public class Main {
	 public static void main(String[] args){
		String s1=null;
		System.out.println(isNullOrEmpty(s1));

    }

    public  static  boolean isNullOrEmpty(String s){

        return (s==null);

    }

}



OUTPUT:

true

/*4-C*/

public class Main {
	 public static void main(String[] args)
	    {
		 String num = "0000331234";
		 String ch = "^0+(?!$)";
		 String str = num.replaceAll(ch, "");
		 System.out.println(num+ "\n" +"After removing leading zero: " +str);
	    }	
}
OUTPUT:
0000331234
After removing leading zero: 331234

/*4-D*/

import java.util.regex.Pattern;
public class Main {
public static void main(String[] args)
   {
	String s = "ABC";
	String s1 = "12@$%";
    System.out.println( isAlphaNumeric(s));
    System.out.println( isAlphaNumeric(s1));
   }

private static boolean isAlphaNumeric(String s) {
	
	 return s != null && s.matches("^[a-zA-Z0-9]*$");
}	
}
OUTPUT:
true
false